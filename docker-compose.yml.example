services:
  vendor-backend:
    container_name: vendor-backend
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://vendor_user:changeme@postgres:5432/vendor_db
      - PORT=3000
    volumes:
      - ./src:/app/src
      - ./prisma:/app/prisma
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    command: npm run dev

  postgres:
    image: postgres:15-alpine
    container_name: vendor-postgres
    environment:
      - POSTGRES_PASSWORD=changeme
      - POSTGRES_DB=vendor_db
      - POSTGRES_USER=vendor_user
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vendor_user -d vendor_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  adminer:
    container_name: vendor-adminer
    image: adminer:4-standalone
    ports:
      - "8081:8080"
    restart: unless-stopped
    depends_on:
      - postgres

volumes:
  postgres_data: